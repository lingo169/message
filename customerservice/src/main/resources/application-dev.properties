#########连接数据库#####################
spring.datasource.url=jdbc:mysql://localhost:3306/cs?serverTimezone=UTC&characterEncoding=utf8
spring.datasource.username=citic
spring.datasource.password=citic123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

################################################################################################################
### SocketIO 配置：
################################################################################################################
#spring.socketio.redis.redisson.enabled=true
#spring.socketio.redis.redisson.server=single
#spring.socketio.redis.redisson.single.address=redis://127.0.0.1:6379
#spring.socketio.redis.redisson.server.client-name=redis
#spring.socketio.redis.redisson.server.connection-minimum-idle-size= 5
#spring.socketio.redis.redisson.server.connection-pool-size=50
spring.socketio.server.enabled=true
## 服务上下文地址，该地址与Nginx负载地址适配 /socket.io
spring.socketio.server.context=/socket.io
## host在本地测试可以设置为localhost或者本机IP，在Linux服务器跑可换成服务器IP gateway负载去掉hostname
spring.socketio.server.hostname=0.0.0.0
## netty启动端口
spring.socketio.server.port=9092
## Ping消息间隔（毫秒），默认25秒。客户端向服务器发送一条心跳消息间隔
spring.socketio.server.ping-interval=25000
## Ping消息超时时间（毫秒），默认60秒，这个时间间隔内没有接收到心跳消息就会发送超时事件
spring.socketio.server.ping-timeout=60000
## 设置最大每帧处理数据的长度，防止他人利用大数据来攻击服务器
spring.socketio.server.max-frame-payload-length=1048576
## 设置http交互最大内容长度
spring.socketio.server.max-http-content-length=1048576
## socket连接数大小（如只监听一个端口boss线程组为1即可）
spring.socketio.server.boss-threads=1
spring.socketio.server.worker-threas=105
spring.socketio.server.origin=":*:"

#######################redisson singleServerConfig########################
spring.socketio.redis.redisson.singleServerConfig.idle-connection-timeout=10011
spring.socketio.redis.redisson.singleServerConfig.connectTimeout=10000
spring.socketio.redis.redisson.singleServerConfig.timeout=3000
spring.socketio.redis.redisson.singleServerConfig.retryAttempts=3
spring.socketio.redis.redisson.singleServerConfig.retryInterval=1500
spring.socketio.redis.redisson.singleServerConfig.subscriptionsPerConnection= 5
spring.socketio.redis.redisson.singleServerConfig.address="redis://127.0.0.1:6379"
spring.socketio.redis.redisson.singleServerConfig.subscriptionConnectionMinimumIdleSize=2
spring.socketio.redis.redisson.singleServerConfig.subscriptionConnectionPoolSize=52
spring.socketio.redis.redisson.singleServerConfig.connectionMinimumIdleSize=10
spring.socketio.redis.redisson.singleServerConfig.connectionPoolSize=64
spring.socketio.redis.redisson.singleServerConfig.dnsMonitoringInterval=5000

cs.prefix-path=E:/dpan/files
################rocketmq###########################
rocketmq.name-server=139.198.176.37:9876
rocketmq.producer.group=producer-group1
rocketmq.producer.sendMessageTimeout=300000
#cs.socketio.chats.topic=message
#cs.socketio.chats.topic.tag=message_tag
rocketmq.consumer.group=consume-group1
################rocketmq###########################

################rabbitmq###########################
spring.rabbitmq.host=192.168.1.116
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

spring.rabbitmq.socketio.topic=message
spring.rabbitmq.content.topic=content
################rabbitmq###########################


rocketmq.consume.topic.socketio.consumergroup=dev-consume-socketio
rocketmq.consume.topic.socketio.topic=dev-message
rocketmq.consume.topic.socketio.tags=dev-message_tag

rocketmq.consume.topic.content.consumergroup=dev-consume-content
rocketmq.consume.topic.content.topic=dev-content
rocketmq.consume.topic.content.tags=dev-content_tag
